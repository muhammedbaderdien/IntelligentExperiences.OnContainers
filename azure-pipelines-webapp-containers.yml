# Azure Pipelines for .NET Core app (Web, Function, ....) :)
# More info: https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=vsts

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'abfa5095-0df9-487b-b0fa-d8438e88d0eb'
  imageRepository: 'ieoncontainers'
  containerRegistry: 'iemobazure0917contosoacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'iemobazure0917contosoacr2bf9-auth'
jobs:
- job: 'ASPNetCoreWebApp'
  pool:
    vmImage: 'ubuntu-16.04'
    demands: npm
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      feedsToUse: config
      nugetConfigPath: 'src/nuget.config'

      projects: '**/*.API.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '**/*.API.csproj'
      arguments: '--configuration Release'
      workingDirectory: 'src'

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration Release --output $(build.artifactstagingdirectory)/app'
      zipAfterPublish: True
      workingDirectory: 'src'

  # - task: qetza.replacetokens.replacetokens-task.replacetokens@3
  #   displayName: 'Replace tokens in deployment/*.yaml'
  #   inputs:
  #     rootDirectory: 'src/deployment'
  #     targetFiles: '**/*.yaml'

  - task: CopyFiles@2
    displayName: 'Copy Deployment Files'
    inputs:
      SourceFolder: 'src/deployment'
      TargetFolder: '$(build.artifactstagingdirectory)/deployment'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: AppDrop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: 'AppDrop'
      zipAfterPublish: True

- job: BuildImage
  displayName: 'BuildImages-ASPNetCoreWebApp'
  dependsOn: 'ASPNetCoreWebApp'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: Docker@2
    displayName: 'Docker Build'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(imageRepository)
      command: build
      Dockerfile: 'src'

  - task: Docker@2
    displayName: 'Docker Push'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(imageRepository)
      command: push
      Dockerfile: 'src'
